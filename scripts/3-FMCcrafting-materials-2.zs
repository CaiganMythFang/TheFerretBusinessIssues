import minetweaker.item.IItemStack;

// Variables

val crate1fmc = <ferretshinies:LayeredIconAsset:393>;
val crate2fmc = <ferretshinies:LayeredIconAsset:394>;
val crate5fmc = <ferretshinies:LayeredIconAsset:395>;
val crate25fmc = <ferretshinies:LayeredIconAsset:396>;
val crate200fmc = <ferretshinies:LayeredIconAsset:397>;
val crate300fmc = <ferretshinies:LayeredIconAsset:398>;
val crate400fmc = <ferretshinies:LayeredIconAsset:399>;

val emptycrate = <ferretshinies:IconAsset:67>;
val crate10fmc = <ferretshinies:LayeredIconAsset:1>;
val crate50fmc = <ferretshinies:LayeredIconAsset:2>;
val crate100fmc = <ferretshinies:LayeredIconAsset:3>;
val crate500fmc = <ferretshinies:LayeredIconAsset:4>;
val crate1k = <ferretshinies:LayeredIconAsset:5>;
val crate2k = <ferretshinies:LayeredIconAsset:6>;
val crate3k = <ferretshinies:LayeredIconAsset:7>;
val crate4k = <ferretshinies:LayeredIconAsset:8>;
val crate5k = <ferretshinies:LayeredIconAsset:9>;
val crate6k = <ferretshinies:LayeredIconAsset:10>;
val crate7k = <ferretshinies:LayeredIconAsset:11>;
val crate8k = <ferretshinies:LayeredIconAsset:12>;
val crate9k = <ferretshinies:LayeredIconAsset:13>;
val crate10k = <ferretshinies:LayeredIconAsset:14>;
val crate20k = <ferretshinies:LayeredIconAsset:15>;
val crate30k = <ferretshinies:LayeredIconAsset:16>;
val crate40k = <ferretshinies:LayeredIconAsset:17>;
val crate50k = <ferretshinies:LayeredIconAsset:18>;
val crate100k = <ferretshinies:LayeredIconAsset:355>;

val FMC11000 = <ore:zFMC11000>;
val FMC11500 = <ore:zFMC11500>;
val FMC12000 = <ore:zFMC12000>;
val FMC12500 = <ore:zFMC12500>;
val FMC13000 = <ore:zFMC13000>;
val FMC13500 = <ore:zFMC13500>;
val FMC14000 = <ore:zFMC14000>;
val FMC14500 = <ore:zFMC14500>;
val FMC15000 = <ore:zFMC15000>;
val FMC15500 = <ore:zFMC15500>;
val FMC16000 = <ore:zFMC16000>;
val FMC16500 = <ore:zFMC16500>;
val FMC17000 = <ore:zFMC17000>;
val FMC17500 = <ore:zFMC17500>;
val FMC18000 = <ore:zFMC18000>;
val FMC18500 = <ore:zFMC18500>;
val FMC19000 = <ore:zFMC19000>;
val FMC19500 = <ore:zFMC19500>;
val FMC20000 = <ore:zFMC20000>;
val FMC20500 = <ore:zFMC20500>;
val FMC21000 = <ore:zFMC21000>;
val FMC21500 = <ore:zFMC21500>;
val FMC22000 = <ore:zFMC22000>;
val FMC22500 = <ore:zFMC22500>;
val FMC23000 = <ore:zFMC23000>;
val FMC23500 = <ore:zFMC23500>;
val FMC24000 = <ore:zFMC24000>;
val FMC24500 = <ore:zFMC24500>;
val FMC25000 = <ore:zFMC25000>;
val FMC25500 = <ore:zFMC25500>;
val FMC26000 = <ore:zFMC26000>;
val FMC26500 = <ore:zFMC26500>;
val FMC27000 = <ore:zFMC27000>;
val FMC27500 = <ore:zFMC27500>;
val FMC28000 = <ore:zFMC28000>;
val FMC28500 = <ore:zFMC28500>;
val FMC29000 = <ore:zFMC29000>;
val FMC29500 = <ore:zFMC29500>;
val FMC30000 = <ore:zFMC30000>;
val FMC30500 = <ore:zFMC30500>;
val FMC31000 = <ore:zFMC31000>;
val FMC31500 = <ore:zFMC31500>;
val FMC32000 = <ore:zFMC32000>;
val FMC32500 = <ore:zFMC32500>;
val FMC33000 = <ore:zFMC33000>;
val FMC33500 = <ore:zFMC33500>;
val FMC34000 = <ore:zFMC34000>;
val FMC34500 = <ore:zFMC34500>;
val FMC35000 = <ore:zFMC35000>;
val FMC35500 = <ore:zFMC35500>;
val FMC36000 = <ore:zFMC36000>;
val FMC36500 = <ore:zFMC36500>;
val FMC37000 = <ore:zFMC37000>;
val FMC37500 = <ore:zFMC37500>;
val FMC38000 = <ore:zFMC38000>;
val FMC38500 = <ore:zFMC38500>;
val FMC39000 = <ore:zFMC39000>;
val FMC39500 = <ore:zFMC39500>;
val FMC40000 = <ore:zFMC40000>;
val FMC40500 = <ore:zFMC40500>;
val FMC41000 = <ore:zFMC41000>;
val FMC41500 = <ore:zFMC41500>;
val FMC42000 = <ore:zFMC42000>;
val FMC42500 = <ore:zFMC42500>;
val FMC43000 = <ore:zFMC43000>;
val FMC43500 = <ore:zFMC43500>;
val FMC44000 = <ore:zFMC44000>;
val FMC44500 = <ore:zFMC44500>;
val FMC45000 = <ore:zFMC45000>;
val FMC45500 = <ore:zFMC45500>;
val FMC46000 = <ore:zFMC46000>;
val FMC46500 = <ore:zFMC46500>;
val FMC47000 = <ore:zFMC47000>;
val FMC47500 = <ore:zFMC47500>;
val FMC48000 = <ore:zFMC48000>;
val FMC48500 = <ore:zFMC48500>;
val FMC49000 = <ore:zFMC49000>;
val FMC49500 = <ore:zFMC49500>;
val FMC50000 = <ore:zFMC50000>;
val FMC50500 = <ore:zFMC50500>;
val FMC51000 = <ore:zFMC51000>;
val FMC51500 = <ore:zFMC51500>;
val FMC52000 = <ore:zFMC52000>;
val FMC52500 = <ore:zFMC52500>;
val FMC53000 = <ore:zFMC53000>;
val FMC53500 = <ore:zFMC53500>;
val FMC54000 = <ore:zFMC54000>;
val FMC54500 = <ore:zFMC54500>;
val FMC55000 = <ore:zFMC55000>;
val FMC55500 = <ore:zFMC55500>;
val FMC56000 = <ore:zFMC56000>;
val FMC56500 = <ore:zFMC56500>;
val FMC57000 = <ore:zFMC57000>;
val FMC57500 = <ore:zFMC57500>;
val FMC58000 = <ore:zFMC58000>;
val FMC58500 = <ore:zFMC58500>;
val FMC59000 = <ore:zFMC59000>;
val FMC59500 = <ore:zFMC59500>;
val FMC60000 = <ore:zFMC60000>;
val FMC60500 = <ore:zFMC60500>;
val FMC61000 = <ore:zFMC61000>;
val FMC61500 = <ore:zFMC61500>;
val FMC62000 = <ore:zFMC62000>;
val FMC62500 = <ore:zFMC62500>;
val FMC63000 = <ore:zFMC63000>;
val FMC63500 = <ore:zFMC63500>;
val FMC64000 = <ore:zFMC64000>;
val FMC64500 = <ore:zFMC64500>;
val FMC65000 = <ore:zFMC65000>;
val FMC65500 = <ore:zFMC65500>;
val FMC66000 = <ore:zFMC66000>;
val FMC66500 = <ore:zFMC66500>;
val FMC67000 = <ore:zFMC67000>;
val FMC67500 = <ore:zFMC67500>;
val FMC68000 = <ore:zFMC68000>;
val FMC68500 = <ore:zFMC68500>;
val FMC69000 = <ore:zFMC69000>;
val FMC69500 = <ore:zFMC69500>;
val FMC70000 = <ore:zFMC70000>;
val FMC70500 = <ore:zFMC70500>;
val FMC71000 = <ore:zFMC71000>;
val FMC71500 = <ore:zFMC71500>;
val FMC72000 = <ore:zFMC72000>;
val FMC72500 = <ore:zFMC72500>;
val FMC73000 = <ore:zFMC73000>;
val FMC73500 = <ore:zFMC73500>;
val FMC74000 = <ore:zFMC74000>;
val FMC74500 = <ore:zFMC74500>;
val FMC75000 = <ore:zFMC75000>;
val FMC75500 = <ore:zFMC75500>;
val FMC76000 = <ore:zFMC76000>;
val FMC76500 = <ore:zFMC76500>;
val FMC77000 = <ore:zFMC77000>;
val FMC77500 = <ore:zFMC77500>;
val FMC78000 = <ore:zFMC78000>;
val FMC78500 = <ore:zFMC78500>;
val FMC79000 = <ore:zFMC79000>;
val FMC79500 = <ore:zFMC79500>;
val FMC80000 = <ore:zFMC80000>;
val FMC80500 = <ore:zFMC80500>;
val FMC81000 = <ore:zFMC81000>;
val FMC81500 = <ore:zFMC81500>;
val FMC82000 = <ore:zFMC82000>;
val FMC82500 = <ore:zFMC82500>;
val FMC83000 = <ore:zFMC83000>;
val FMC83500 = <ore:zFMC83500>;
val FMC84000 = <ore:zFMC84000>;
val FMC84500 = <ore:zFMC84500>;
val FMC85000 = <ore:zFMC85000>;
val FMC85500 = <ore:zFMC85500>;
val FMC86000 = <ore:zFMC86000>;
val FMC86500 = <ore:zFMC86500>;
val FMC87000 = <ore:zFMC87000>;
val FMC87500 = <ore:zFMC87500>;
val FMC88000 = <ore:zFMC88000>;
val FMC88500 = <ore:zFMC88500>;
val FMC89000 = <ore:zFMC89000>;
val FMC89500 = <ore:zFMC89500>;
val FMC90000 = <ore:zFMC90000>;
val FMC90500 = <ore:zFMC90500>;
val FMC91000 = <ore:zFMC91000>;
val FMC91500 = <ore:zFMC91500>;
val FMC92000 = <ore:zFMC92000>;
val FMC92500 = <ore:zFMC92500>;
val FMC93000 = <ore:zFMC93000>;
val FMC93500 = <ore:zFMC93500>;
val FMC94000 = <ore:zFMC94000>;
val FMC94500 = <ore:zFMC94500>;
val FMC95000 = <ore:zFMC95000>;
val FMC95500 = <ore:zFMC95500>;
val FMC96000 = <ore:zFMC96000>;
val FMC96500 = <ore:zFMC96500>;
val FMC97000 = <ore:zFMC97000>;
val FMC97500 = <ore:zFMC97500>;
val FMC98000 = <ore:zFMC98000>;
val FMC98500 = <ore:zFMC98500>;
val FMC99000 = <ore:zFMC99000>;
val FMC99500 = <ore:zFMC99500>;
val FMC100000 = <ore:zFMC100000>;
val FMC101000 = <ore:zFMC101000>;
val FMC102000 = <ore:zFMC102000>;
val FMC103000 = <ore:zFMC103000>;
val FMC104000 = <ore:zFMC104000>;
val FMC105000 = <ore:zFMC105000>;
val FMC106000 = <ore:zFMC106000>;
val FMC107000 = <ore:zFMC107000>;
val FMC108000 = <ore:zFMC108000>;
val FMC109000 = <ore:zFMC109000>;
val FMC110000 = <ore:zFMC110000>;
val FMC111000 = <ore:zFMC111000>;
val FMC112000 = <ore:zFMC112000>;
val FMC113000 = <ore:zFMC113000>;
val FMC114000 = <ore:zFMC114000>;
val FMC115000 = <ore:zFMC115000>;
val FMC116000 = <ore:zFMC116000>;
val FMC117000 = <ore:zFMC117000>;
val FMC118000 = <ore:zFMC118000>;
val FMC119000 = <ore:zFMC119000>;
val FMC120000 = <ore:zFMC120000>;
val FMC121000 = <ore:zFMC121000>;
val FMC122000 = <ore:zFMC122000>;
val FMC123000 = <ore:zFMC123000>;
val FMC124000 = <ore:zFMC124000>;
val FMC125000 = <ore:zFMC125000>;
val FMC126000 = <ore:zFMC126000>;
val FMC127000 = <ore:zFMC127000>;
val FMC128000 = <ore:zFMC128000>;
val FMC129000 = <ore:zFMC129000>;
val FMC130000 = <ore:zFMC130000>;
val FMC131000 = <ore:zFMC131000>;
val FMC132000 = <ore:zFMC132000>;
val FMC133000 = <ore:zFMC133000>;
val FMC134000 = <ore:zFMC134000>;
val FMC135000 = <ore:zFMC135000>;
val FMC136000 = <ore:zFMC136000>;
val FMC137000 = <ore:zFMC137000>;
val FMC138000 = <ore:zFMC138000>;
val FMC139000 = <ore:zFMC139000>;
val FMC140000 = <ore:zFMC140000>;
val FMC141000 = <ore:zFMC141000>;
val FMC142000 = <ore:zFMC142000>;
val FMC143000 = <ore:zFMC143000>;
val FMC144000 = <ore:zFMC144000>;
val FMC145000 = <ore:zFMC145000>;
val FMC146000 = <ore:zFMC146000>;
val FMC147000 = <ore:zFMC147000>;
val FMC148000 = <ore:zFMC148000>;
val FMC149000 = <ore:zFMC149000>;
val FMC150000 = <ore:zFMC150000>;
val FMC151000 = <ore:zFMC151000>;
val FMC152000 = <ore:zFMC152000>;
val FMC153000 = <ore:zFMC153000>;
val FMC154000 = <ore:zFMC154000>;
val FMC155000 = <ore:zFMC155000>;
val FMC156000 = <ore:zFMC156000>;
val FMC157000 = <ore:zFMC157000>;
val FMC158000 = <ore:zFMC158000>;
val FMC159000 = <ore:zFMC159000>;
val FMC160000 = <ore:zFMC160000>;
val FMC161000 = <ore:zFMC161000>;
val FMC162000 = <ore:zFMC162000>;
val FMC163000 = <ore:zFMC163000>;
val FMC164000 = <ore:zFMC164000>;
val FMC165000 = <ore:zFMC165000>;
val FMC166000 = <ore:zFMC166000>;
val FMC167000 = <ore:zFMC167000>;
val FMC168000 = <ore:zFMC168000>;
val FMC169000 = <ore:zFMC169000>;
val FMC170000 = <ore:zFMC170000>;
val FMC171000 = <ore:zFMC171000>;
val FMC172000 = <ore:zFMC172000>;
val FMC173000 = <ore:zFMC173000>;
val FMC174000 = <ore:zFMC174000>;
val FMC175000 = <ore:zFMC175000>;
val FMC176000 = <ore:zFMC176000>;
val FMC177000 = <ore:zFMC177000>;
val FMC178000 = <ore:zFMC178000>;
val FMC179000 = <ore:zFMC179000>;
val FMC180000 = <ore:zFMC180000>;
val FMC181000 = <ore:zFMC181000>;
val FMC182000 = <ore:zFMC182000>;
val FMC183000 = <ore:zFMC183000>;
val FMC184000 = <ore:zFMC184000>;
val FMC185000 = <ore:zFMC185000>;
val FMC186000 = <ore:zFMC186000>;
val FMC187000 = <ore:zFMC187000>;
val FMC188000 = <ore:zFMC188000>;
val FMC189000 = <ore:zFMC189000>;
val FMC190000 = <ore:zFMC190000>;
val FMC191000 = <ore:zFMC191000>;
val FMC192000 = <ore:zFMC192000>;
val FMC193000 = <ore:zFMC193000>;
val FMC194000 = <ore:zFMC194000>;
val FMC195000 = <ore:zFMC195000>;
val FMC196000 = <ore:zFMC196000>;
val FMC197000 = <ore:zFMC197000>;
val FMC198000 = <ore:zFMC198000>;
val FMC199000 = <ore:zFMC199000>;
val FMC200000 = <ore:zFMC200000>;
val FMC201000 = <ore:zFMC201000>;
val FMC202000 = <ore:zFMC202000>;
val FMC203000 = <ore:zFMC203000>;
val FMC204000 = <ore:zFMC204000>;
val FMC205000 = <ore:zFMC205000>;
val FMC206000 = <ore:zFMC206000>;
val FMC207000 = <ore:zFMC207000>;
val FMC208000 = <ore:zFMC208000>;
val FMC209000 = <ore:zFMC209000>;
val FMC210000 = <ore:zFMC210000>;
val FMC211000 = <ore:zFMC211000>;
val FMC212000 = <ore:zFMC212000>;
val FMC213000 = <ore:zFMC213000>;
val FMC214000 = <ore:zFMC214000>;
val FMC215000 = <ore:zFMC215000>;
val FMC216000 = <ore:zFMC216000>;
val FMC217000 = <ore:zFMC217000>;
val FMC218000 = <ore:zFMC218000>;
val FMC219000 = <ore:zFMC219000>;
val FMC220000 = <ore:zFMC220000>;
val FMC221000 = <ore:zFMC221000>;
val FMC222000 = <ore:zFMC222000>;
val FMC223000 = <ore:zFMC223000>;
val FMC224000 = <ore:zFMC224000>;
val FMC225000 = <ore:zFMC225000>;
val FMC226000 = <ore:zFMC226000>;
val FMC227000 = <ore:zFMC227000>;
val FMC228000 = <ore:zFMC228000>;
val FMC229000 = <ore:zFMC229000>;
val FMC230000 = <ore:zFMC230000>;
val FMC231000 = <ore:zFMC231000>;
val FMC232000 = <ore:zFMC232000>;
val FMC233000 = <ore:zFMC233000>;
val FMC234000 = <ore:zFMC234000>;
val FMC235000 = <ore:zFMC235000>;
val FMC236000 = <ore:zFMC236000>;
val FMC237000 = <ore:zFMC237000>;
val FMC238000 = <ore:zFMC238000>;
val FMC239000 = <ore:zFMC239000>;
val FMC240000 = <ore:zFMC240000>;
val FMC241000 = <ore:zFMC241000>;
val FMC242000 = <ore:zFMC242000>;
val FMC243000 = <ore:zFMC243000>;
val FMC244000 = <ore:zFMC244000>;
val FMC245000 = <ore:zFMC245000>;
val FMC246000 = <ore:zFMC246000>;
val FMC247000 = <ore:zFMC247000>;
val FMC248000 = <ore:zFMC248000>;
val FMC249000 = <ore:zFMC249000>;
val FMC250000 = <ore:zFMC250000>;
val FMC251000 = <ore:zFMC251000>;
val FMC252000 = <ore:zFMC252000>;
val FMC253000 = <ore:zFMC253000>;
val FMC254000 = <ore:zFMC254000>;
val FMC255000 = <ore:zFMC255000>;
val FMC256000 = <ore:zFMC256000>;
val FMC257000 = <ore:zFMC257000>;
val FMC258000 = <ore:zFMC258000>;
val FMC259000 = <ore:zFMC259000>;
val FMC260000 = <ore:zFMC260000>;
val FMC261000 = <ore:zFMC261000>;
val FMC262000 = <ore:zFMC262000>;
val FMC263000 = <ore:zFMC263000>;
val FMC264000 = <ore:zFMC264000>;
val FMC265000 = <ore:zFMC265000>;
val FMC266000 = <ore:zFMC266000>;
val FMC267000 = <ore:zFMC267000>;
val FMC268000 = <ore:zFMC268000>;
val FMC269000 = <ore:zFMC269000>;
val FMC270000 = <ore:zFMC270000>;
val FMC271000 = <ore:zFMC271000>;
val FMC272000 = <ore:zFMC272000>;
val FMC273000 = <ore:zFMC273000>;
val FMC274000 = <ore:zFMC274000>;
val FMC275000 = <ore:zFMC275000>;
val FMC276000 = <ore:zFMC276000>;
val FMC277000 = <ore:zFMC277000>;
val FMC278000 = <ore:zFMC278000>;
val FMC279000 = <ore:zFMC279000>;
val FMC280000 = <ore:zFMC280000>;
val FMC281000 = <ore:zFMC281000>;
val FMC282000 = <ore:zFMC282000>;
val FMC283000 = <ore:zFMC283000>;
val FMC284000 = <ore:zFMC284000>;
val FMC285000 = <ore:zFMC285000>;
val FMC286000 = <ore:zFMC286000>;
val FMC287000 = <ore:zFMC287000>;
val FMC288000 = <ore:zFMC288000>;
val FMC289000 = <ore:zFMC289000>;
val FMC290000 = <ore:zFMC290000>;
val FMC291000 = <ore:zFMC291000>;
val FMC292000 = <ore:zFMC292000>;
val FMC293000 = <ore:zFMC293000>;
val FMC294000 = <ore:zFMC294000>;
val FMC295000 = <ore:zFMC295000>;
val FMC296000 = <ore:zFMC296000>;
val FMC297000 = <ore:zFMC297000>;
val FMC298000 = <ore:zFMC298000>;
val FMC299000 = <ore:zFMC299000>;
val FMC300000 = <ore:zFMC300000>;

// --------------------------
// 11,000 to 19,500
// --------------------------

recipes.addShapeless(crate10k, [emptycrate, FMC11000.transformReplace(crate500fmc * 2)]);
recipes.addShapeless(crate10k, [emptycrate, FMC11500.transformReplace(crate500fmc * 3)]);
recipes.addShapeless(crate10k, [emptycrate, FMC12000.transformReplace(crate500fmc * 4)]);
recipes.addShapeless(crate10k, [emptycrate, FMC12500.transformReplace(crate500fmc * 5)]);
recipes.addShapeless(crate10k, [emptycrate, FMC13000.transformReplace(crate500fmc * 6)]);
recipes.addShapeless(crate10k, [emptycrate, FMC13500.transformReplace(crate500fmc * 7)]);
recipes.addShapeless(crate10k, [emptycrate, FMC14000.transformReplace(crate500fmc * 8)]);
recipes.addShapeless(crate10k, [emptycrate, FMC14500.transformReplace(crate500fmc * 9)]);
recipes.addShapeless(crate10k, [emptycrate, FMC15000.transformReplace(crate500fmc * 10)]);
recipes.addShapeless(crate10k, [emptycrate, FMC15500.transformReplace(crate500fmc * 11)]);
recipes.addShapeless(crate10k, [emptycrate, FMC16000.transformReplace(crate500fmc * 12)]);
recipes.addShapeless(crate10k, [emptycrate, FMC16500.transformReplace(crate500fmc * 13)]);
recipes.addShapeless(crate10k, [emptycrate, FMC17000.transformReplace(crate500fmc * 14)]);
recipes.addShapeless(crate10k, [emptycrate, FMC17500.transformReplace(crate500fmc * 15)]);
recipes.addShapeless(crate10k, [emptycrate, FMC18000.transformReplace(crate500fmc * 16)]);
recipes.addShapeless(crate10k, [emptycrate, FMC18500.transformReplace(crate500fmc * 17)]);
recipes.addShapeless(crate10k, [emptycrate, FMC19000.transformReplace(crate500fmc * 18)]);
recipes.addShapeless(crate10k, [emptycrate, FMC19500.transformReplace(crate500fmc * 19)]);

// --------------------------
// 21,000 to 29,500
// --------------------------
recipes.addShapeless(crate20k, [emptycrate, FMC21000.transformReplace(crate500fmc * 2)]);
recipes.addShapeless(crate20k, [emptycrate, FMC21500.transformReplace(crate500fmc * 3)]);
recipes.addShapeless(crate20k, [emptycrate, FMC22000.transformReplace(crate500fmc * 4)]);
recipes.addShapeless(crate20k, [emptycrate, FMC22500.transformReplace(crate500fmc * 5)]);
recipes.addShapeless(crate20k, [emptycrate, FMC23000.transformReplace(crate500fmc * 6)]);
recipes.addShapeless(crate20k, [emptycrate, FMC23500.transformReplace(crate500fmc * 7)]);
recipes.addShapeless(crate20k, [emptycrate, FMC24000.transformReplace(crate500fmc * 8)]);
recipes.addShapeless(crate20k, [emptycrate, FMC24500.transformReplace(crate500fmc * 9)]);
recipes.addShapeless(crate20k, [emptycrate, FMC25000.transformReplace(crate500fmc * 10)]);
recipes.addShapeless(crate20k, [emptycrate, FMC25500.transformReplace(crate500fmc * 11)]);
recipes.addShapeless(crate20k, [emptycrate, FMC26000.transformReplace(crate500fmc * 12)]);
recipes.addShapeless(crate20k, [emptycrate, FMC26500.transformReplace(crate500fmc * 13)]);
recipes.addShapeless(crate20k, [emptycrate, FMC27000.transformReplace(crate500fmc * 14)]);
recipes.addShapeless(crate20k, [emptycrate, FMC27500.transformReplace(crate500fmc * 15)]);
recipes.addShapeless(crate20k, [emptycrate, FMC28000.transformReplace(crate500fmc * 16)]);
recipes.addShapeless(crate20k, [emptycrate, FMC28500.transformReplace(crate500fmc * 17)]);
recipes.addShapeless(crate20k, [emptycrate, FMC29000.transformReplace(crate500fmc * 18)]);
recipes.addShapeless(crate20k, [emptycrate, FMC29500.transformReplace(crate500fmc * 19)]);

// --------------------------
// 31,000 to 39,500
// --------------------------
recipes.addShapeless(crate30k, [emptycrate, FMC31000.transformReplace(crate500fmc * 2)]);
recipes.addShapeless(crate30k, [emptycrate, FMC31500.transformReplace(crate500fmc * 3)]);
recipes.addShapeless(crate30k, [emptycrate, FMC32000.transformReplace(crate500fmc * 4)]);
recipes.addShapeless(crate30k, [emptycrate, FMC32500.transformReplace(crate500fmc * 5)]);
recipes.addShapeless(crate30k, [emptycrate, FMC33000.transformReplace(crate500fmc * 6)]);
recipes.addShapeless(crate30k, [emptycrate, FMC33500.transformReplace(crate500fmc * 7)]);
recipes.addShapeless(crate30k, [emptycrate, FMC34000.transformReplace(crate500fmc * 8)]);
recipes.addShapeless(crate30k, [emptycrate, FMC34500.transformReplace(crate500fmc * 9)]);
recipes.addShapeless(crate30k, [emptycrate, FMC35000.transformReplace(crate500fmc * 10)]);
recipes.addShapeless(crate30k, [emptycrate, FMC35500.transformReplace(crate500fmc * 11)]);
recipes.addShapeless(crate30k, [emptycrate, FMC36000.transformReplace(crate500fmc * 12)]);
recipes.addShapeless(crate30k, [emptycrate, FMC36500.transformReplace(crate500fmc * 13)]);
recipes.addShapeless(crate30k, [emptycrate, FMC37000.transformReplace(crate500fmc * 14)]);
recipes.addShapeless(crate30k, [emptycrate, FMC37500.transformReplace(crate500fmc * 15)]);
recipes.addShapeless(crate30k, [emptycrate, FMC38000.transformReplace(crate500fmc * 16)]);
recipes.addShapeless(crate30k, [emptycrate, FMC38500.transformReplace(crate500fmc * 17)]);
recipes.addShapeless(crate30k, [emptycrate, FMC39000.transformReplace(crate500fmc * 18)]);
recipes.addShapeless(crate30k, [emptycrate, FMC39500.transformReplace(crate500fmc * 19)]);

// --------------------------
// 41,000 to 49,500
// --------------------------
recipes.addShapeless(crate40k, [emptycrate, FMC41000.transformReplace(crate500fmc * 2)]);
recipes.addShapeless(crate40k, [emptycrate, FMC41500.transformReplace(crate500fmc * 3)]);
recipes.addShapeless(crate40k, [emptycrate, FMC42000.transformReplace(crate500fmc * 4)]);
recipes.addShapeless(crate40k, [emptycrate, FMC42500.transformReplace(crate500fmc * 5)]);
recipes.addShapeless(crate40k, [emptycrate, FMC43000.transformReplace(crate500fmc * 6)]);
recipes.addShapeless(crate40k, [emptycrate, FMC43500.transformReplace(crate500fmc * 7)]);
recipes.addShapeless(crate40k, [emptycrate, FMC44000.transformReplace(crate500fmc * 8)]);
recipes.addShapeless(crate40k, [emptycrate, FMC44500.transformReplace(crate500fmc * 9)]);
recipes.addShapeless(crate40k, [emptycrate, FMC45000.transformReplace(crate500fmc * 10)]);
recipes.addShapeless(crate40k, [emptycrate, FMC45500.transformReplace(crate500fmc * 11)]);
recipes.addShapeless(crate40k, [emptycrate, FMC46000.transformReplace(crate500fmc * 12)]);
recipes.addShapeless(crate40k, [emptycrate, FMC46500.transformReplace(crate500fmc * 13)]);
recipes.addShapeless(crate40k, [emptycrate, FMC47000.transformReplace(crate500fmc * 14)]);
recipes.addShapeless(crate40k, [emptycrate, FMC47500.transformReplace(crate500fmc * 15)]);
recipes.addShapeless(crate40k, [emptycrate, FMC48000.transformReplace(crate500fmc * 16)]);
recipes.addShapeless(crate40k, [emptycrate, FMC48500.transformReplace(crate500fmc * 17)]);
recipes.addShapeless(crate40k, [emptycrate, FMC49000.transformReplace(crate500fmc * 18)]);
recipes.addShapeless(crate40k, [emptycrate, FMC49500.transformReplace(crate500fmc * 19)]);

// --------------------------
// 51,000 to 60,500
// --------------------------
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate1k * 1), FMC51000]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate1k * 1), FMC51500.transformReplace(crate500fmc * 1)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate1k * 1), FMC52000.transformReplace(crate500fmc * 2)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate1k * 1), FMC52500.transformReplace(crate500fmc * 3)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate1k * 1), FMC53000.transformReplace(crate500fmc * 4)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate1k * 1), FMC53500.transformReplace(crate500fmc * 5)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate1k * 1), FMC54000.transformReplace(crate500fmc * 6)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate1k * 1), FMC54500.transformReplace(crate500fmc * 7)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate1k * 1), FMC55000.transformReplace(crate500fmc * 8)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate1k * 1), FMC55500.transformReplace(crate500fmc * 9)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate1k * 1), FMC56000.transformReplace(crate500fmc * 10)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate1k * 1), FMC56500.transformReplace(crate500fmc * 11)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate1k * 1), FMC57000.transformReplace(crate500fmc * 12)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate1k * 1), FMC57500.transformReplace(crate500fmc * 13)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate1k * 1), FMC58000.transformReplace(crate500fmc * 14)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate1k * 1), FMC58500.transformReplace(crate500fmc * 15)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate1k * 1), FMC59000.transformReplace(crate500fmc * 16)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate1k * 1), FMC59500.transformReplace(crate500fmc * 17)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate1k * 1), FMC60000.transformReplace(crate500fmc * 18)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate1k * 1), FMC60500.transformReplace(crate500fmc * 19)]);

// --------------------------
// 61,000 to 70,500
// --------------------------
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 1), FMC61000.transformReplace(crate500fmc * 2)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 1), FMC61500.transformReplace(crate500fmc * 3)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 1), FMC62000.transformReplace(crate500fmc * 4)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 1), FMC62500.transformReplace(crate500fmc * 5)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 1), FMC63000.transformReplace(crate500fmc * 6)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 1), FMC63500.transformReplace(crate500fmc * 7)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 1), FMC64000.transformReplace(crate500fmc * 8)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 1), FMC64500.transformReplace(crate500fmc * 9)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 1), FMC65000.transformReplace(crate500fmc * 10)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 1), FMC65500.transformReplace(crate500fmc * 11)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 1), FMC66000.transformReplace(crate500fmc * 12)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 1), FMC66500.transformReplace(crate500fmc * 13)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 1), FMC67000.transformReplace(crate500fmc * 14)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 1), FMC67500.transformReplace(crate500fmc * 15)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 1), FMC68000.transformReplace(crate500fmc * 16)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 1), FMC68500.transformReplace(crate500fmc * 17)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 1), FMC69000.transformReplace(crate500fmc * 18)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 1), FMC69500.transformReplace(crate500fmc * 19)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 1), FMC70000.transformReplace(crate500fmc * 20)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 1), FMC70500.transformReplace(crate500fmc * 21)]);

// --------------------------
// 71,000 to 80,500
// --------------------------
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 2), FMC71000.transformReplace(crate500fmc * 2)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 2), FMC71500.transformReplace(crate500fmc * 3)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 2), FMC72000.transformReplace(crate500fmc * 4)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 2), FMC72500.transformReplace(crate500fmc * 5)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 2), FMC73000.transformReplace(crate500fmc * 6)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 2), FMC73500.transformReplace(crate500fmc * 7)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 2), FMC74000.transformReplace(crate500fmc * 8)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 2), FMC74500.transformReplace(crate500fmc * 9)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 2), FMC75000.transformReplace(crate500fmc * 10)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 2), FMC75500.transformReplace(crate500fmc * 11)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 2), FMC76000.transformReplace(crate500fmc * 12)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 2), FMC76500.transformReplace(crate500fmc * 13)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 2), FMC77000.transformReplace(crate500fmc * 14)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 2), FMC77500.transformReplace(crate500fmc * 15)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 2), FMC78000.transformReplace(crate500fmc * 16)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 2), FMC78500.transformReplace(crate500fmc * 17)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 2), FMC79000.transformReplace(crate500fmc * 18)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 2), FMC79500.transformReplace(crate500fmc * 19)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 2), FMC80000.transformReplace(crate500fmc * 20)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 2), FMC80500.transformReplace(crate500fmc * 21)]);

// --------------------------
// 81,000 to 90,500
// --------------------------
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 3), FMC81000.transformReplace(crate500fmc * 2)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 3), FMC81500.transformReplace(crate500fmc * 3)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 3), FMC82000.transformReplace(crate500fmc * 4)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 3), FMC82500.transformReplace(crate500fmc * 5)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 3), FMC83000.transformReplace(crate500fmc * 6)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 3), FMC83500.transformReplace(crate500fmc * 7)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 3), FMC84000.transformReplace(crate500fmc * 8)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 3), FMC84500.transformReplace(crate500fmc * 9)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 3), FMC85000.transformReplace(crate500fmc * 10)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 3), FMC85500.transformReplace(crate500fmc * 11)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 3), FMC86000.transformReplace(crate500fmc * 12)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 3), FMC86500.transformReplace(crate500fmc * 13)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 3), FMC87000.transformReplace(crate500fmc * 14)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 3), FMC87500.transformReplace(crate500fmc * 15)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 3), FMC88000.transformReplace(crate500fmc * 16)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 3), FMC88500.transformReplace(crate500fmc * 17)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 3), FMC89000.transformReplace(crate500fmc * 18)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 3), FMC89500.transformReplace(crate500fmc * 19)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 3), FMC90000.transformReplace(crate500fmc * 20)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 3), FMC90500.transformReplace(crate500fmc * 21)]);

// --------------------------
// 91,000 to 99,500
// --------------------------
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 4), FMC91000.transformReplace(crate500fmc * 2)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 4), FMC91500.transformReplace(crate500fmc * 3)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 4), FMC92000.transformReplace(crate500fmc * 4)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 4), FMC92500.transformReplace(crate500fmc * 5)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 4), FMC93000.transformReplace(crate500fmc * 6)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 4), FMC93500.transformReplace(crate500fmc * 7)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 4), FMC94000.transformReplace(crate500fmc * 8)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 4), FMC94500.transformReplace(crate500fmc * 9)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 4), FMC95000.transformReplace(crate500fmc * 10)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 4), FMC95500.transformReplace(crate500fmc * 11)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 4), FMC96000.transformReplace(crate500fmc * 12)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 4), FMC96500.transformReplace(crate500fmc * 13)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 4), FMC97000.transformReplace(crate500fmc * 14)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 4), FMC97500.transformReplace(crate500fmc * 15)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 4), FMC98000.transformReplace(crate500fmc * 16)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 4), FMC98500.transformReplace(crate500fmc * 17)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 4), FMC99000.transformReplace(crate500fmc * 18)]);
recipes.addShapeless(crate50k, [emptycrate.transformReplace(crate10k * 4), FMC99500.transformReplace(crate500fmc * 19)]);

// --------------------------
// 101,000 to 120,000
// --------------------------
recipes.addShapeless(crate100k, [emptycrate, FMC101000.transformReplace(crate1k * 1)]);
recipes.addShapeless(crate100k, [emptycrate, FMC102000.transformReplace(crate1k * 2)]);
recipes.addShapeless(crate100k, [emptycrate, FMC103000.transformReplace(crate1k * 3)]);
recipes.addShapeless(crate100k, [emptycrate, FMC104000.transformReplace(crate1k * 4)]);
recipes.addShapeless(crate100k, [emptycrate, FMC105000.transformReplace(crate1k * 5)]);
recipes.addShapeless(crate100k, [emptycrate, FMC106000.transformReplace(crate1k * 6)]);
recipes.addShapeless(crate100k, [emptycrate, FMC107000.transformReplace(crate1k * 7)]);
recipes.addShapeless(crate100k, [emptycrate, FMC108000.transformReplace(crate1k * 8)]);
recipes.addShapeless(crate100k, [emptycrate, FMC109000.transformReplace(crate1k * 9)]);
recipes.addShapeless(crate100k, [emptycrate, FMC110000.transformReplace(crate1k * 10)]);
recipes.addShapeless(crate100k, [emptycrate, FMC111000.transformReplace(crate1k * 11)]);
recipes.addShapeless(crate100k, [emptycrate, FMC112000.transformReplace(crate1k * 12)]);
recipes.addShapeless(crate100k, [emptycrate, FMC113000.transformReplace(crate1k * 13)]);
recipes.addShapeless(crate100k, [emptycrate, FMC114000.transformReplace(crate1k * 14)]);
recipes.addShapeless(crate100k, [emptycrate, FMC115000.transformReplace(crate1k * 15)]);
recipes.addShapeless(crate100k, [emptycrate, FMC116000.transformReplace(crate1k * 16)]);
recipes.addShapeless(crate100k, [emptycrate, FMC117000.transformReplace(crate1k * 17)]);
recipes.addShapeless(crate100k, [emptycrate, FMC118000.transformReplace(crate1k * 18)]);
recipes.addShapeless(crate100k, [emptycrate, FMC119000.transformReplace(crate1k * 19)]);
recipes.addShapeless(crate100k, [emptycrate, FMC120000.transformReplace(crate1k * 20)]);

// --------------------------
// 121,000 to 140,000
// --------------------------
recipes.addShapeless(crate100k, [emptycrate, FMC121000.transformReplace(crate1k * 21)]);
recipes.addShapeless(crate100k, [emptycrate, FMC122000.transformReplace(crate1k * 22)]);
recipes.addShapeless(crate100k, [emptycrate, FMC123000.transformReplace(crate1k * 23)]);
recipes.addShapeless(crate100k, [emptycrate, FMC124000.transformReplace(crate1k * 24)]);
recipes.addShapeless(crate100k, [emptycrate, FMC125000.transformReplace(crate1k * 25)]);
recipes.addShapeless(crate100k, [emptycrate, FMC126000.transformReplace(crate1k * 26)]);
recipes.addShapeless(crate100k, [emptycrate, FMC127000.transformReplace(crate1k * 27)]);
recipes.addShapeless(crate100k, [emptycrate, FMC128000.transformReplace(crate1k * 28)]);
recipes.addShapeless(crate100k, [emptycrate, FMC129000.transformReplace(crate1k * 29)]);
recipes.addShapeless(crate100k, [emptycrate, FMC130000.transformReplace(crate1k * 30)]);
recipes.addShapeless(crate100k, [emptycrate, FMC131000.transformReplace(crate1k * 31)]);
recipes.addShapeless(crate100k, [emptycrate, FMC132000.transformReplace(crate1k * 32)]);
recipes.addShapeless(crate100k, [emptycrate, FMC133000.transformReplace(crate1k * 33)]);
recipes.addShapeless(crate100k, [emptycrate, FMC134000.transformReplace(crate1k * 34)]);
recipes.addShapeless(crate100k, [emptycrate, FMC135000.transformReplace(crate1k * 35)]);
recipes.addShapeless(crate100k, [emptycrate, FMC136000.transformReplace(crate1k * 36)]);
recipes.addShapeless(crate100k, [emptycrate, FMC137000.transformReplace(crate1k * 37)]);
recipes.addShapeless(crate100k, [emptycrate, FMC138000.transformReplace(crate1k * 38)]);
recipes.addShapeless(crate100k, [emptycrate, FMC139000.transformReplace(crate1k * 39)]);
recipes.addShapeless(crate100k, [emptycrate, FMC140000.transformReplace(crate1k * 40)]);

// --------------------------
// 141,000 to 160,000
// --------------------------
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 4), FMC141000.transformReplace(crate1k * 1)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 4), FMC142000.transformReplace(crate1k * 2)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 4), FMC143000.transformReplace(crate1k * 3)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 4), FMC144000.transformReplace(crate1k * 4)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 4), FMC145000.transformReplace(crate1k * 5)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 4), FMC146000.transformReplace(crate1k * 6)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 4), FMC147000.transformReplace(crate1k * 7)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 4), FMC148000.transformReplace(crate1k * 8)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 4), FMC149000.transformReplace(crate1k * 9)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 4), FMC150000.transformReplace(crate1k * 10)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 4), FMC151000.transformReplace(crate1k * 11)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 4), FMC152000.transformReplace(crate1k * 12)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 4), FMC153000.transformReplace(crate1k * 13)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 4), FMC154000.transformReplace(crate1k * 14)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 4), FMC155000.transformReplace(crate1k * 15)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 4), FMC156000.transformReplace(crate1k * 16)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 4), FMC157000.transformReplace(crate1k * 17)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 4), FMC158000.transformReplace(crate1k * 18)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 4), FMC159000.transformReplace(crate1k * 19)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 4), FMC160000.transformReplace(crate1k * 20)]);

// --------------------------
// 161,000 to 180,000
// --------------------------
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 6), FMC161000.transformReplace(crate1k * 1)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 6), FMC162000.transformReplace(crate1k * 2)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 6), FMC163000.transformReplace(crate1k * 3)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 6), FMC164000.transformReplace(crate1k * 4)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 6), FMC165000.transformReplace(crate1k * 5)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 6), FMC166000.transformReplace(crate1k * 6)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 6), FMC167000.transformReplace(crate1k * 7)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 6), FMC168000.transformReplace(crate1k * 8)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 6), FMC169000.transformReplace(crate1k * 9)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 6), FMC170000.transformReplace(crate1k * 10)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 6), FMC171000.transformReplace(crate1k * 11)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 6), FMC172000.transformReplace(crate1k * 12)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 6), FMC173000.transformReplace(crate1k * 13)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 6), FMC174000.transformReplace(crate1k * 14)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 6), FMC175000.transformReplace(crate1k * 15)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 6), FMC176000.transformReplace(crate1k * 16)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 6), FMC177000.transformReplace(crate1k * 17)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 6), FMC178000.transformReplace(crate1k * 18)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 6), FMC179000.transformReplace(crate1k * 19)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 6), FMC180000.transformReplace(crate1k * 20)]);

// --------------------------
// 181,000 to 200,000
// --------------------------
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 8), FMC181000.transformReplace(crate1k * 1)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 8), FMC182000.transformReplace(crate1k * 2)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 8), FMC183000.transformReplace(crate1k * 3)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 8), FMC184000.transformReplace(crate1k * 4)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 8), FMC185000.transformReplace(crate1k * 5)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 8), FMC186000.transformReplace(crate1k * 6)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 8), FMC187000.transformReplace(crate1k * 7)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 8), FMC188000.transformReplace(crate1k * 8)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 8), FMC189000.transformReplace(crate1k * 9)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 8), FMC190000.transformReplace(crate1k * 10)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 8), FMC191000.transformReplace(crate1k * 11)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 8), FMC192000.transformReplace(crate1k * 12)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 8), FMC193000.transformReplace(crate1k * 13)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 8), FMC194000.transformReplace(crate1k * 14)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 8), FMC195000.transformReplace(crate1k * 15)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 8), FMC196000.transformReplace(crate1k * 16)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 8), FMC197000.transformReplace(crate1k * 17)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 8), FMC198000.transformReplace(crate1k * 18)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 8), FMC199000.transformReplace(crate1k * 19)]);
recipes.addShapeless(crate100k, [emptycrate.transformReplace(crate10k * 8), FMC200000.transformReplace(crate1k * 20)]);

// --------------------------
// 201,000 to 220,000
// --------------------------
recipes.addShapeless(crate100k * 2, [emptycrate, FMC201000.transformReplace(crate1k * 1)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC202000.transformReplace(crate1k * 2)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC203000.transformReplace(crate1k * 3)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC204000.transformReplace(crate1k * 4)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC205000.transformReplace(crate1k * 5)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC206000.transformReplace(crate1k * 6)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC207000.transformReplace(crate1k * 7)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC208000.transformReplace(crate1k * 8)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC209000.transformReplace(crate1k * 9)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC210000.transformReplace(crate1k * 10)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC211000.transformReplace(crate1k * 11)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC212000.transformReplace(crate1k * 12)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC213000.transformReplace(crate1k * 13)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC214000.transformReplace(crate1k * 14)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC215000.transformReplace(crate1k * 15)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC216000.transformReplace(crate1k * 16)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC217000.transformReplace(crate1k * 17)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC218000.transformReplace(crate1k * 18)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC219000.transformReplace(crate1k * 19)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC220000.transformReplace(crate1k * 20)]);

// --------------------------
// 221,000 to 240,000
// --------------------------
recipes.addShapeless(crate100k * 2, [emptycrate, FMC221000.transformReplace(crate1k * 21)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC222000.transformReplace(crate1k * 22)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC223000.transformReplace(crate1k * 23)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC224000.transformReplace(crate1k * 24)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC225000.transformReplace(crate1k * 25)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC226000.transformReplace(crate1k * 26)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC227000.transformReplace(crate1k * 27)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC228000.transformReplace(crate1k * 28)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC229000.transformReplace(crate1k * 29)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC230000.transformReplace(crate1k * 30)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC231000.transformReplace(crate1k * 31)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC232000.transformReplace(crate1k * 32)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC233000.transformReplace(crate1k * 33)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC234000.transformReplace(crate1k * 34)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC235000.transformReplace(crate1k * 35)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC236000.transformReplace(crate1k * 36)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC237000.transformReplace(crate1k * 37)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC238000.transformReplace(crate1k * 38)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC239000.transformReplace(crate1k * 39)]);
recipes.addShapeless(crate100k * 2, [emptycrate, FMC240000.transformReplace(crate1k * 40)]);

// --------------------------
// 241,000 to 260,000
// --------------------------
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 4), FMC241000.transformReplace(crate1k * 1)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 4), FMC242000.transformReplace(crate1k * 2)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 4), FMC243000.transformReplace(crate1k * 3)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 4), FMC244000.transformReplace(crate1k * 4)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 4), FMC245000.transformReplace(crate1k * 5)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 4), FMC246000.transformReplace(crate1k * 6)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 4), FMC247000.transformReplace(crate1k * 7)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 4), FMC248000.transformReplace(crate1k * 8)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 4), FMC249000.transformReplace(crate1k * 9)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 4), FMC250000.transformReplace(crate1k * 10)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 4), FMC251000.transformReplace(crate1k * 11)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 4), FMC252000.transformReplace(crate1k * 12)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 4), FMC253000.transformReplace(crate1k * 13)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 4), FMC254000.transformReplace(crate1k * 14)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 4), FMC255000.transformReplace(crate1k * 15)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 4), FMC256000.transformReplace(crate1k * 16)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 4), FMC257000.transformReplace(crate1k * 17)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 4), FMC258000.transformReplace(crate1k * 18)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 4), FMC259000.transformReplace(crate1k * 19)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 4), FMC260000.transformReplace(crate1k * 20)]);

// --------------------------
// 261,000 to 280,000
// --------------------------
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 6), FMC261000.transformReplace(crate1k * 1)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 6), FMC262000.transformReplace(crate1k * 2)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 6), FMC263000.transformReplace(crate1k * 3)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 6), FMC264000.transformReplace(crate1k * 4)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 6), FMC265000.transformReplace(crate1k * 5)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 6), FMC266000.transformReplace(crate1k * 6)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 6), FMC267000.transformReplace(crate1k * 7)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 6), FMC268000.transformReplace(crate1k * 8)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 6), FMC269000.transformReplace(crate1k * 9)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 6), FMC270000.transformReplace(crate1k * 10)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 6), FMC271000.transformReplace(crate1k * 11)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 6), FMC272000.transformReplace(crate1k * 12)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 6), FMC273000.transformReplace(crate1k * 13)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 6), FMC274000.transformReplace(crate1k * 14)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 6), FMC275000.transformReplace(crate1k * 15)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 6), FMC276000.transformReplace(crate1k * 16)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 6), FMC277000.transformReplace(crate1k * 17)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 6), FMC278000.transformReplace(crate1k * 18)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 6), FMC279000.transformReplace(crate1k * 19)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 6), FMC280000.transformReplace(crate1k * 20)]);

// --------------------------
// 281,000 to 300,000
// --------------------------
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 8), FMC281000.transformReplace(crate1k * 1)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 8), FMC282000.transformReplace(crate1k * 2)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 8), FMC283000.transformReplace(crate1k * 3)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 8), FMC284000.transformReplace(crate1k * 4)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 8), FMC285000.transformReplace(crate1k * 5)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 8), FMC286000.transformReplace(crate1k * 6)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 8), FMC287000.transformReplace(crate1k * 7)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 8), FMC288000.transformReplace(crate1k * 8)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 8), FMC289000.transformReplace(crate1k * 9)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 8), FMC290000.transformReplace(crate1k * 10)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 8), FMC291000.transformReplace(crate1k * 11)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 8), FMC292000.transformReplace(crate1k * 12)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 8), FMC293000.transformReplace(crate1k * 13)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 8), FMC294000.transformReplace(crate1k * 14)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 8), FMC295000.transformReplace(crate1k * 15)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 8), FMC296000.transformReplace(crate1k * 16)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 8), FMC297000.transformReplace(crate1k * 17)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 8), FMC298000.transformReplace(crate1k * 18)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 8), FMC299000.transformReplace(crate1k * 19)]);
recipes.addShapeless(crate100k * 2, [emptycrate.transformReplace(crate10k * 8), FMC300000.transformReplace(crate1k * 20)]);